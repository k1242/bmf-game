version: '3.8'

services:
  # Nginx for serving frontend and proxying API
  nginx:
    build: 
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./frontend:/usr/share/nginx/html/bmf:ro
    depends_on:
      - backend
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait ${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait ${!}; done;'"
    restart: unless-stopped

  # Flask backend
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - FLASK_ENV=production
    depends_on:
      - mongo
    restart: unless-stopped

  # MongoDB
  mongo:
    image: mongo:6
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

volumes:
  mongo_data: